
/* EN UTILITIES -> bucles, mixin. IF NO, ya queson condicionales solo para una clase */

@each $key, $value in $colores {
    .btn-#{$key} {
        padding: 10px;
        cursor: pointer;
        background-color: $value;
        outline: none;
        border: 1px solid transparent;
        transition: .3s;
        font-weight: bold;
        font-size: 25px;
        
        /* BOTON CLARO */
        @if $key == light {
            color: #000000;
            &:hover {
                background-color: darken($value, 50%);
                border: 1px solid lighten($value, 30%);
                color: $value;
                box-shadow: 1px 1px 6px lighten($value, 30%);
                font-size: 28px;
            }
            /* BOTON OSCURO */
        } @else if $key == dark {
            color: #ffffff;
            &:hover {
                background-color: lighten($value, 10%);
                box-shadow: 1px 1px 6px lighten($value, 30%);
                border: 1px solid lighten($value, 30%);
                font-size: 28px;
            }
            /* RESTO DE LOS BOTONES */
        } @else {
            color: #ffffff;
            &:hover {
                background-color: darken($value, 10%);
                box-shadow: 1px 1px 6px lighten($value, 30%);
                border: 1px solid lighten($value, 30%);
                font-size: 28px;
            }
        }
    }
}

/* EXTENDS = sacamos propiedades de otra clase,
MIXIN (s/parametros) = funcion que guarda propiedades en un "mixin"
MIXIN (c/parametros) = *EJEMPLO BAJO* */

/* MIXIN (s/parametros) */

@mixin nico {
    background-color: #6b1313;
    display: flex;
    position: absolute;
}

/* EJEMPLO de MIXIN (c/parametros) */

@mixin nico ($color, $tipodeDisplay, $posicion) {
    background-color: $color;
    display: $tipodeDisplay;
    position: $posicion;
}

.box-container {
    @include nico(red, flex, absolute);
}



@mixin images ($width, $height) {
    width: $width;
    height: $height;
}

